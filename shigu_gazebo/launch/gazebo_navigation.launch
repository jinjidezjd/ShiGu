<?xml version="1.0"?>
<!-- 在有地图情况下进行导航 -->
<launch>
  <!-- true使用仿真时间，false使用系统时间 -->
  <!-- <param name="use_sim_time" value="true" /> -->


  <!--加载地图-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find shigu_gazebo)/worlds/liangcang3.world"/>
    <!-- <arg name="world_name" value="$(find shigu_gazebo)/worlds/playpen.world"/> -->
    <!-- <arg name="world_name" value="$(find shigu_gazebo)/worlds/gazebo_navigation.world"/> -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  <!-- 加载 robot description -->
  <include file="$(find shigu_description)/launch/description.launch" >
  </include>
    <!--导入urdf模型-->
  <node name="spawn_shigu_model" pkg="gazebo_ros" type="spawn_model"
    args="-x 0 -y -2 -z 0  -Y -1.57079632 -unpause -urdf -param robot_description -model  shigu " /> <!--将载体坐标系与ENU坐标系对准-->

  <!-- 加载 controller configuration -->
  <rosparam command="load" file="$(find shigu_control)/config/control.yaml" />

  <!--加载机器人控制器 -->
  <!-- <node name="base_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    args="shigu_joint_publisher shigu_velocity_controller"/> -->

  <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

  <!-- 运行robot_state_publisher节点，发布tf  -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!--速度复用-->
  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find shigu_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="shigu_velocity_controller/cmd_vel"/>
  </node>

  <!-- 发布cmd_vel -->
  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>

  <!-- 视觉里程计,不发布tf -->   
  <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry">
      <remap from="left/image_rect"   to="/stereo_camera/left/image_raw_throttle"/>
      <remap from="right/image_rect"  to="/stereo_camera/right/image_raw_throttle"/>
      <remap from="left/camera_info"  to="/stereo_camera/left/camera_info_throttle"/>
      <remap from="right/camera_info" to="/stereo_camera/right/camera_info_throttle"/>
      <remap from="odom"              to="/stereo_odometry"/>
      <param name="publish_tf"   type="bool" value="false"/>
      <param name="subscribe_rgbd"  type="bool" value="false"/>
      <param name="frame_id"        type="string" value="base_link"/>
      <param name="odom_frame_id"   type="string" value="odom"/>
      <param name="publish_null_when_lost"        type="bool" value="false"/><!--里程计丢失时是否发布空变换-->
      <param name="Odom/Strategy"      type="string" value="1"/> 
      <param name="Vis/EstimationType" type="string" value="1"/>
      <param name="Vis/MaxDepth"       type="string" value="0"/>
      <param name="Odom/GuessMotion" type="string" value="true"/>
      <param name="Vis/MinInliers"     type="string" value="10"/>
      <param name="OdomF2M/MaxSize"    type="string" value="1000"/> 
      <param name="GFTT/MinDistance"   type="string" value="10"/>
      <param name="GFTT/QualityLevel"  type="string" value="0.00001"/> 
      <param name="GFTT/QualityLevel"  type="string" value="0.00001"/>
  </node>

  <!--gps转换为里程计数据-->
  <node name="gps2odom" pkg="gps_common" type="gps2odom">
  </node>
  <!-- 九轴imu从北西天坐标系转换到东北天坐标系 -->
  <node name="imuNWU2ENU" pkg="coordinate_transform" type="imuNWU2ENU">
  </node>
  <!-- 保存九轴imu初始姿态 -->
  <node name="initial_imu" pkg="coordinate_transform" type="initial_imu" >
  </node>
  <!-- 视觉里程计从载体坐标系转换到导航东北天坐标系 -->
  <node name="stereBASE2ENU" pkg="coordinate_transform" type="stereBASE2ENU" >
  </node>

  <!-- GPS/IMU融合 -->
  <node pkg="ekf_eskf_vo" type="ekf_localization_node" name="gps_imu_fusion" clear_params="true">
    <rosparam command="load" file="$(find ekf_eskf_vo)/params/gps_imu_fusion.yaml" />
    <remap from="/odom" to="/gps/odom"/>
    <remap from="/imu/data" to="/imu/data"/>
    <remap from="/ekf_odom" to="/gps_imu_odometry"/>   
    <remap from="/ekf_path" to="/gps_imu_path"/>   
  </node>
  
  <!-- 传感器融合定位 -->
  <!-- eskf -->
  <node name="eskf_imu_gps_node" pkg="eskf_imu_gps" type="eskf_imu_gps_node" output="screen" >
    <remap from="/fix" to="/gps/odom"/>
    <remap from="/imu/data" to="/imu/data"/>
    <param name="acc_noise"       type="double" value="1e-2" />
    <param name="gyr_noise"       type="double" value="1e-4" />
    <param name="acc_bias_noise"  type="double" value="1e-6" />
    <param name="gyr_bias_noise"  type="double" value="1e-8" />
    <param name="p_I_GNSS_x"      type="double" value="0.333"/>
    <param name="p_I_GNSS_y"      type="double" value="0."/>
    <param name="p_I_GNSS_z"      type="double" value="0.013"/>
    <param name="publish_tf"      type="bool" value="false"/>
  </node>
    <!-- ekf -->
  <node pkg="ekf_eskf_vo" type="ekf_localization_node" name="ekf_localization_node" clear_params="true">
    <rosparam command="load" file="$(find ekf_eskf_vo)/params/real_2d_localization.yaml" />
    <remap from="/vo" to="/stereo_odometry"/>
    <remap from="/eskf_odom" to="/gps_imu_odometry"/> 
  </node>

  <!-- 有地图情况下导航+初始定位 -->
  <!-- 发布静态地图 -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find shigu_gazebo)/map/liangcang.yaml"/>
  <!-- 发布初始位姿 -->
  <!-- <node type="initial_localization" pkg="shigu_gazebo" name="initial_localization"  >
  </node> -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_odom_static" 
    args="6 0 0 0 0 0 1 map odom"/>

  <!-- <node pkg="amcl" type="amcl" name="amcl">
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="3000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.20"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="0.0"/>
    <param name="initial_pose_y"            value="0.0"/>
    <param name="initial_pose_a"            value="0.0"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="/scan"/>
    <param name="laser_max_range"           value="3.5"/>
    <param name="laser_max_beams"           value="180"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="base_link"/>

  </node> -->
  <!-- 双目生成点云 -->
  <node pkg="stereo_image_proc" type="stereo_image_proc" respawn="false" name="stereo_image_proc" output="screen">
    <remap from="points2" to="points2"/>
    <remap from="left/image_raw"   to="/stereo_camera/left/image_raw_throttle"/>
    <remap from="right/image_raw"  to="/stereo_camera/right/image_raw_throttle"/>
    <remap from="left/camera_info"  to="/stereo_camera/left/camera_info_throttle"/>
    <remap from="right/camera_info" to="/stereo_camera/right/camera_info_throttle"/>
  </node>
  <!-- 点云转激光雷达 -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/points2"/>
      <remap from="scan" to="points2_scan"/>
      <rosparam>
            target_frame: base_link 
            transform_tolerance: 0.01
            min_height: 0.0
            max_height: 1.0
            angle_min: -1.5708
            angle_max: 1.5708
            angle_increment: 0.0087
            scan_time: 0.3333
            range_min: 0.45
            range_max: 4.0
            use_inf: true
            inf_epsilon: 1.0
            concurrency_level: 1
        </rosparam>
  </node>
  <!--- Run Move Base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/move_base_params.yaml" command="load" />
    <rosparam file="$(find shigu_navigation)/config/gazebo_navigation/dwa_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="scan" to="/points2_scan"/>
    <remap from="odom" to="/ekf_odom"/>
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="false" />
  </node>
  <!-- 可视化 -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find shigu_viz)/rviz/gazebo_navigation.rviz" output="screen"/> 



</launch>